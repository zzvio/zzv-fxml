{
    "definitions": {
        "AccountType": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "available": {
                    "type": "integer",
                    "format": "int64"
                },
                "locked": {
                    "type": "integer",
                    "format": "int64"
                },
                "nonce": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "AddNodeResponse": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "ApiHandlerResponse": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "BlockType": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                },
                "number": {
                    "type": "integer",
                    "format": "int64"
                },
                "view": {
                    "type": "integer",
                    "format": "int32"
                },
                "coinbase": {
                    "type": "string"
                },
                "parentHash": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int64"
                },
                "date": {
                    "type": "string"
                },
                "transactionsRoot": {
                    "type": "string"
                },
                "resultsRoot": {
                    "type": "string"
                },
                "stateRoot": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TransactionType"
                    }
                }
            }
        },
        "CreateAccountResponse": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "result": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "DelegateType": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "registeredAt": {
                    "type": "integer",
                    "format": "int64"
                },
                "votes": {
                    "type": "integer",
                    "format": "int64"
                },
                "blocksForged": {
                    "type": "integer",
                    "format": "int64"
                },
                "turnsHit": {
                    "type": "integer",
                    "format": "int64"
                },
                "turnsMissed": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DoTransactionResponse": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "GetAccountResponse": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "result": {
                    "$ref": "#/definitions/AccountType"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "GetAccountTransactionsResponse": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TransactionType"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "GetBlockResponse": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "result": {
                    "$ref": "#/definitions/BlockType"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "GetDelegateResponse": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "result": {
                    "$ref": "#/definitions/DelegateType"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "GetDelegatesResponse": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DelegateType"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "GetInfoResponse": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "result": {
                    "$ref": "#/definitions/InfoType"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "GetLatestBlockNumberResponse": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "result": {
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "GetLatestBlockResponse": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "result": {
                    "$ref": "#/definitions/BlockType"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "GetPeersResponse": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PeerType"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "GetPendingTransactionsResponse": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TransactionType"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "GetTransactionLimitsResponse": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "result": {
                    "$ref": "#/definitions/TransactionLimitsType"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "GetTransactionResponse": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "result": {
                    "$ref": "#/definitions/TransactionType"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "GetValidatorsResponse": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "GetVoteResponse": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "result": {
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "GetVotesResponse": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "result": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "InfoType": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "coinbase": {
                    "type": "string"
                },
                "latestBlockNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "latestBlockHash": {
                    "type": "string"
                },
                "activePeers": {
                    "type": "integer",
                    "format": "int32"
                },
                "pendingTransactions": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ListAccountsResponse": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "PeerType": {
            "type": "object",
            "properties": {
                "ip": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int32"
                },
                "networkVersion": {
                    "type": "integer",
                    "format": "int32"
                },
                "clientId": {
                    "type": "string"
                },
                "peerId": {
                    "type": "string"
                },
                "latestBlockNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "latency": {
                    "type": "integer",
                    "format": "int64"
                },
                "capabilities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "SendTransactionResponse": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "TransactionLimitsType": {
            "type": "object",
            "properties": {
                "maxTransactionDataSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "minTransactionFee": {
                    "type": "integer",
                    "format": "int64"
                },
                "minDelegateBurnAmount": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TransactionType": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "value": {
                    "type": "integer",
                    "format": "int64"
                },
                "fee": {
                    "type": "integer",
                    "format": "int64"
                },
                "nonce": {
                    "type": "integer",
                    "format": "int64"
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "type": "string"
                }
            }
        }
    },
    "info": {
        "description": "Semux is an experimental high-performance blockchain platform that powers decentralized application.",
        "version": "1.0.0",
        "title": "Semux",
        "contact": {
            "name": "Semux Foundation",
            "url": "https://www.semux.org"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/mit-license.php"
        }
    },
    "paths": {
        "/add_node": {
            "get": {
                "summary": "Add node",
                "description": "Adds a node to node manager.",
                "operationId": "addNode",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "node",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AddNodeResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/add_to_blacklist": {
            "get": {
                "summary": "Add to blacklist",
                "description": "Adds an IP address to blacklist.",
                "operationId": "addToBlacklist",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "ip",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ApiHandlerResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/add_to_whitelist": {
            "get": {
                "summary": "Add to Whitelist",
                "description": "Adds an IP address to whitelist.",
                "operationId": "addToWhitelist",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "ip",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ApiHandlerResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/create_account": {
            "get": {
                "summary": "Create account",
                "description": "Creates a new account.",
                "operationId": "createAccount",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CreateAccountResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/delegate": {
            "get": {
                "summary": "Register delegate",
                "description": "Registers as a delegate",
                "operationId": "registerDelegate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fee",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "data",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DoTransactionResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/get_account": {
            "get": {
                "summary": "Get account",
                "description": "Returns an account.",
                "operationId": "getAccount",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "address",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetAccountResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/get_account_transactions": {
            "get": {
                "summary": "Get account transactions",
                "description": "Returns transactions from/to an account.",
                "operationId": "getAccountTransactions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "address",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetAccountTransactionsResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/get_block": {
            "get": {
                "summary": "Get block",
                "description": "Returns a block.",
                "operationId": "getBlock",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "number",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetBlockResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/get_delegate": {
            "get": {
                "summary": "Get a delegate",
                "description": "Returns a delegate.",
                "operationId": "getDelegate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "address",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetDelegateResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/get_delegates": {
            "get": {
                "summary": "Get all delegates",
                "description": "Returns a list of delegates.",
                "operationId": "getDelegates",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetDelegatesResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/get_info": {
            "get": {
                "summary": "Get info",
                "description": "Returns kernel info.",
                "operationId": "getInfo",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetInfoResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/get_latest_block": {
            "get": {
                "summary": "Get latest block",
                "description": "Returns the latest block.",
                "operationId": "getLatestBlock",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetLatestBlockResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/get_latest_block_number": {
            "get": {
                "summary": "Get latest block number",
                "description": "Returns the number of the latest block.",
                "operationId": "getLatestBlockNumber",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetLatestBlockNumberResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/get_peers": {
            "get": {
                "summary": "Get peers",
                "description": "Returns connected peers.",
                "operationId": "getPeers",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetPeersResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/get_pending_transactions": {
            "get": {
                "summary": "Get pending transactions",
                "description": "Returns all the pending transactions.",
                "operationId": "getPendingTransactions",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetPendingTransactionsResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/get_transaction": {
            "get": {
                "summary": "Get transaction",
                "description": "Returns a transactions if exists.",
                "operationId": "getTransaction",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "hash",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetTransactionResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/get_transaction_limits": {
            "get": {
                "summary": "Get transaction limits",
                "description": "Get minimum fee and maximum size.",
                "operationId": "getTransactionLimits",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetTransactionLimitsResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/get_validators": {
            "get": {
                "summary": "Get valididators",
                "description": "Returns a list of validators.",
                "operationId": "getValidators",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetValidatorsResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/get_vote": {
            "get": {
                "summary": "Get vote",
                "description": "Returns the vote from a voter to a delegate.",
                "operationId": "getVote",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "delegate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voter",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetVoteResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/get_votes": {
            "get": {
                "summary": "Get votes",
                "description": "Returns all the votes to a delegate",
                "operationId": "getVotes",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "delegate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetVotesResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/list_accounts": {
            "get": {
                "summary": "List accounts",
                "description": "Returns accounts in the wallet.",
                "operationId": "listAccounts",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListAccountsResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/send_transaction": {
            "get": {
                "summary": "Send a raw transaction",
                "description": "Broadcasts a raw transaction to the network.",
                "operationId": "sendTransaction",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "raw",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SendTransactionResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/transfer": {
            "get": {
                "summary": "Transfer coins",
                "description": "Transfers coins to another address.",
                "operationId": "transfer",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "value",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fee",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "data",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DoTransactionResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/unvote": {
            "get": {
                "summary": "Unvote",
                "description": "Unvotes for a delegate.",
                "operationId": "unvote",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fee",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DoTransactionResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/vote": {
            "get": {
                "summary": "Vote",
                "description": "Votes for a delegate.",
                "operationId": "vote",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fee",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DoTransactionResponse"
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        }
    },
    "schemes": [
        "http"
    ],
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic"
        }
    },
    "swagger": "2.0"
}
