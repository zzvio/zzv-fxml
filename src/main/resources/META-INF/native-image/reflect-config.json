[
  {
    "name": "boolean[]"
  },
  {
    "name": "byte[]"
  },
  {
    "name": "char[]"
  },
  {
    "name": "com.fasterxml.jackson.core.JsonParser"
  },
  {
    "name": "com.fasterxml.jackson.databind.JsonNode"
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper"
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef",
    "fields": [
      {
        "name": "drainStatus",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueColdProducerFields",
    "fields": [
      {
        "name": "producerLimit",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueConsumerFields",
    "fields": [
      {
        "name": "consumerIndex",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueProducerFields",
    "fields": [
      {
        "name": "producerIndex",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.PS",
    "fields": [
      {
        "name": "key",
        "allowUnsafeAccess": true
      },
      {
        "name": "value",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.PSMS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.SSMS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.github.benmanes.caffeine.cache.Caffeine",
          "com.github.benmanes.caffeine.cache.CacheLoader",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "com.github.benmanes.caffeine.cache.StripedBuffer",
    "fields": [
      {
        "name": "tableBusy",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "com.gluonhq.impl.charm.glisten.control.skin.GlistenButtonSkin",
    "allPublicConstructors": true
  },
  {
    "name": "com.mycompany.sample.MainFX",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.javafx.font.freetype.FTFactory",
    "methods": [
      {
        "name": "getFactory",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.javafx.logging.PrintLogger",
    "methods": [
      {
        "name": "createInstance",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.javafx.logging.jfr.JFRPulseLogger",
    "methods": [
      {
        "name": "createInstance",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.javafx.scene.control.skin.Utils",
    "methods": [
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.sun.javafx.tk.quantum.QuantumToolkit",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.management.GarbageCollectorMXBean",
    "allPublicMethods": true
  },
  {
    "name": "com.sun.management.GcInfo",
    "allPublicMethods": true
  },
  {
    "name": "com.sun.management.HotSpotDiagnosticMXBean",
    "allPublicMethods": true
  },
  {
    "name": "com.sun.management.ThreadMXBean",
    "allPublicMethods": true
  },
  {
    "name": "com.sun.management.UnixOperatingSystemMXBean",
    "allPublicMethods": true
  },
  {
    "name": "com.sun.management.VMOption",
    "allPublicMethods": true
  },
  {
    "name": "com.sun.management.internal.GarbageCollectorExtImpl",
    "allPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.HotSpotDiagnostic",
    "allPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.HotSpotThreadImpl",
    "allPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.OperatingSystemImpl",
    "allPublicConstructors": true
  },
  {
    "name": "com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.prism.GraphicsPipeline",
    "methods": [
      {
        "name": "getFontFactory",
        "parameterTypes": []
      },
      {
        "name": "getPipeline",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.prism.es2.ES2Pipeline",
    "methods": [
      {
        "name": "getInstance",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.prism.sw.SWPipeline",
    "methods": [
      {
        "name": "getInstance",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.scenario.effect.impl.prism.PrRenderer",
    "methods": [
      {
        "name": "createRenderer",
        "parameterTypes": [
          "com.sun.scenario.effect.FilterContext"
        ]
      }
    ]
  },
  {
    "name": "com.sun.scenario.effect.impl.prism.sw.PSWRenderer",
    "methods": [
      {
        "name": "createRenderer",
        "parameterTypes": [
          "com.sun.scenario.effect.FilterContext"
        ]
      }
    ]
  },
  {
    "name": "com.sun.scenario.effect.impl.sw.sse.SSEBlend_SRC_INPeer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.sun.scenario.effect.FilterContext",
          "com.sun.scenario.effect.impl.Renderer",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.sun.scenario.effect.impl.sw.sse.SSEBoxBlurPeer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.sun.scenario.effect.FilterContext",
          "com.sun.scenario.effect.impl.Renderer",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.sun.scenario.effect.impl.sw.sse.SSEBoxShadowPeer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.sun.scenario.effect.FilterContext",
          "com.sun.scenario.effect.impl.Renderer",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.sun.scenario.effect.impl.sw.sse.SSERendererDelegate",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "double[]"
  },
  {
    "name": "float[]"
  },
  {
    "name": "int[]"
  },
  {
    "name": "io.netty.bootstrap.ServerBootstrap$1"
  },
  {
    "name": "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.buffer.AbstractByteBufAllocator",
    "allDeclaredMethods": true
  },
  {
    "name": "io.netty.buffer.AbstractReferenceCountedByteBuf",
    "fields": [
      {
        "name": "refCnt",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelDuplexHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelInboundHandlerAdapter",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelInitializer",
    "methods": [
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$HeadContext",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$TailContext",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.SimpleChannelInboundHandler",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.socket.nio.NioServerSocketChannel",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.netty.channel.socket.nio.NioSocketChannel",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.ByteToMessageCodec",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.MessageToMessageCodec",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.ipfilter.IpFilterRule",
    "allDeclaredMethods": true
  },
  {
    "name": "io.netty.handler.logging.LoggingHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.timeout.IdleStateHandler",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.timeout.ReadTimeoutHandler"
  },
  {
    "name": "io.netty.util.ReferenceCountUtil",
    "allDeclaredMethods": true
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
    "fields": [
      {
        "name": "producerLimit",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
    "fields": [
      {
        "name": "consumerIndex",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
    "fields": [
      {
        "name": "producerIndex",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
    "fields": [
      {
        "name": "consumerIndex",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
    "fields": [
      {
        "name": "producerIndex",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
    "fields": [
      {
        "name": "producerLimit",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "java.io.ObjectInputStream",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.Boolean",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Byte",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Character",
    "fields": [
      {
        "name": "TYPE"
      }
    ],
    "methods": [
      {
        "name": "isIdeographic",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Comparable",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.Double",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Float",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Integer",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Long",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Object",
    "allDeclaredFields": true
  },
  {
    "name": "java.lang.Short",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.StackTraceElement",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.String"
  },
  {
    "name": "java.lang.String[]"
  },
  {
    "name": "java.lang.Thread",
    "fields": [
      {
        "name": "threadLocalRandomProbe",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "java.lang.Void",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.management.BufferPoolMXBean",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.management.ClassLoadingMXBean",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.management.CompilationMXBean",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.management.LockInfo",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.management.ManagementFactory",
    "methods": [
      {
        "name": "getRuntimeMXBean",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.management.ManagementPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.lang.management.MemoryMXBean",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryManagerMXBean",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryPoolMXBean",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryUsage",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.management.MonitorInfo",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.management.PlatformLoggingMXBean",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.management.RuntimeMXBean",
    "allPublicMethods": true,
    "methods": [
      {
        "name": "getInputArguments",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.management.ThreadInfo",
    "allPublicMethods": true
  },
  {
    "name": "java.math.BigDecimal"
  },
  {
    "name": "java.math.BigInteger"
  },
  {
    "name": "java.nio.Bits",
    "fields": [
      {
        "name": "UNALIGNED",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "java.nio.Buffer",
    "fields": [
      {
        "name": "address",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "java.nio.ByteBuffer",
    "methods": [
      {
        "name": "order",
        "parameterTypes": [
          "java.nio.ByteOrder"
        ]
      }
    ]
  },
  {
    "name": "java.nio.ByteOrder",
    "methods": [
      {
        "name": "nativeOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.nio.DirectByteBuffer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "long",
          "int"
        ]
      }
    ]
  },
  {
    "name": "java.security.AlgorithmParametersSpi"
  },
  {
    "name": "java.security.MessageDigestSpi"
  },
  {
    "name": "java.security.SecureRandomParameters"
  },
  {
    "name": "java.security.cert.PKIXRevocationChecker"
  },
  {
    "name": "java.security.interfaces.DSAPrivateKey"
  },
  {
    "name": "java.security.interfaces.DSAPublicKey"
  },
  {
    "name": "java.security.interfaces.RSAPrivateKey"
  },
  {
    "name": "java.security.interfaces.RSAPublicKey"
  },
  {
    "name": "java.security.spec.DSAParameterSpec"
  },
  {
    "name": "java.util.Date"
  },
  {
    "name": "java.util.PropertyPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.util.logging.LogManager",
    "methods": [
      {
        "name": "getLoggingMXBean",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.logging.LoggingMXBean",
    "allPublicMethods": true
  },
  {
    "name": "javafx.animation.KeyValue"
  },
  {
    "name": "javafx.scene.Camera"
  },
  {
    "name": "javafx.scene.Node"
  },
  {
    "name": "javafx.scene.ParallelCamera"
  },
  {
    "name": "javafx.scene.Parent"
  },
  {
    "name": "javafx.scene.Scene"
  },
  {
    "name": "javafx.scene.control.Control"
  },
  {
    "name": "javafx.scene.effect.Effect"
  },
  {
    "name": "javafx.scene.image.Image"
  },
  {
    "name": "javafx.scene.image.ImageView"
  },
  {
    "name": "javafx.scene.layout.Pane"
  },
  {
    "name": "javafx.scene.layout.Region"
  },
  {
    "name": "javafx.scene.shape.Circle"
  },
  {
    "name": "javafx.scene.shape.Rectangle"
  },
  {
    "name": "javafx.scene.shape.Shape"
  },
  {
    "name": "javafx.scene.text.Font"
  },
  {
    "name": "javafx.scene.text.Text"
  },
  {
    "name": "javafx.scene.transform.Transform"
  },
  {
    "name": "javafx.stage.Stage"
  },
  {
    "name": "javafx.stage.Window"
  },
  {
    "name": "javax.management.MBeanOperationInfo",
    "allPublicMethods": true
  },
  {
    "name": "javax.management.MBeanServerBuilder",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.management.NotificationBroadcasterSupport",
    "methods": [
      {
        "name": "getNotificationInfo",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.management.ObjectName"
  },
  {
    "name": "javax.management.openmbean.CompositeData"
  },
  {
    "name": "javax.management.openmbean.CompositeData[]"
  },
  {
    "name": "javax.management.openmbean.OpenMBeanOperationInfoSupport"
  },
  {
    "name": "javax.management.openmbean.TabularData"
  },
  {
    "name": "javax.security.auth.x500.X500Principal",
    "fields": [
      {
        "name": "thisX500Name"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "sun.security.x509.X500Name"
        ]
      }
    ]
  },
  {
    "name": "jdk.internal.misc.Unsafe",
    "methods": [
      {
        "name": "getUnsafe",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jdk.management.jfr.ConfigurationInfo",
    "allPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.EventTypeInfo",
    "allPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.FlightRecorderMXBean",
    "allPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.FlightRecorderMXBeanImpl",
    "allPublicConstructors": true
  },
  {
    "name": "jdk.management.jfr.RecordingInfo",
    "allPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.SettingDescriptorInfo",
    "allPublicMethods": true
  },
  {
    "name": "long[]"
  },
  {
    "name": "org.apache.logging.log4j.core.Appender[]"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.AbstractAppender$Builder",
    "allDeclaredFields": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender$Builder",
    "allDeclaredFields": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.AppenderSet"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.AsyncAppender",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.AsyncAppender$Builder",
    "allDeclaredFields": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.ConsoleAppender",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.ConsoleAppender$Builder",
    "allDeclaredFields": true
  },
  {
    "name": "org.apache.logging.log4j.core.appender.CountingNoOpAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.FailoverAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.FailoversPlugin"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.FileAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.HttpAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.MemoryMappedFileAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.NullAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.OutputStreamAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.RandomAccessFileAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.RollingFileAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.ScriptAppenderSelector"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.SmtpAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.SocketAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.SyslogAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.WriterAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.db.ColumnMapping"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.db.jdbc.DataSourceConnectionSource"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.db.jdbc.DriverManagerConnectionSource"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.db.jdbc.FactoryMethodConnectionSource"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.mom.JmsAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.mom.jeromq.JeroMqAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.nosql.NoSqlAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rewrite.LoggerNameLevelRewritePolicy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rewrite.MapRewritePolicy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rewrite.PropertiesRewritePolicy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rewrite.RewriteAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.CompositeTriggeringPolicy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.CronTriggeringPolicy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.DirectWriteRolloverStrategy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.NoOpTriggeringPolicy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.OnStartupTriggeringPolicy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.SizeBasedTriggeringPolicy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.TimeBasedTriggeringPolicy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.DeleteAction"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.IfAccumulatedFileCount"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.IfAccumulatedFileSize"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.IfAll"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.IfAny"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.IfFileName"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.IfLastModified"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.IfNot"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.PathSortByModificationTime"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.rolling.action.ScriptCondition"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.routing.IdlePurgePolicy"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.routing.Route"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.routing.Routes"
  },
  {
    "name": "org.apache.logging.log4j.core.appender.routing.RoutingAppender"
  },
  {
    "name": "org.apache.logging.log4j.core.async.ArrayBlockingQueueFactory"
  },
  {
    "name": "org.apache.logging.log4j.core.async.AsyncLoggerConfig"
  },
  {
    "name": "org.apache.logging.log4j.core.async.AsyncLoggerConfig$RootLogger"
  },
  {
    "name": "org.apache.logging.log4j.core.async.DisruptorBlockingQueueFactory"
  },
  {
    "name": "org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory"
  },
  {
    "name": "org.apache.logging.log4j.core.async.LinkedTransferQueueFactory",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.AppenderRef",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.AppenderRef[]"
  },
  {
    "name": "org.apache.logging.log4j.core.config.AppendersPlugin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.CustomLevelConfig"
  },
  {
    "name": "org.apache.logging.log4j.core.config.CustomLevels"
  },
  {
    "name": "org.apache.logging.log4j.core.config.DefaultAdvertiser"
  },
  {
    "name": "org.apache.logging.log4j.core.config.HttpWatcher"
  },
  {
    "name": "org.apache.logging.log4j.core.config.LoggerConfig",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.LoggerConfig$RootLogger",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.LoggerConfig[]"
  },
  {
    "name": "org.apache.logging.log4j.core.config.LoggersPlugin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.config.PropertiesPlugin"
  },
  {
    "name": "org.apache.logging.log4j.core.config.Property"
  },
  {
    "name": "org.apache.logging.log4j.core.config.Property[]"
  },
  {
    "name": "org.apache.logging.log4j.core.config.ScriptsPlugin"
  },
  {
    "name": "org.apache.logging.log4j.core.config.json.JsonConfigurationFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BigDecimalConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BigIntegerConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BooleanConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ByteArrayConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ByteConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharArrayConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharacterConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharsetConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ClassConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CronExpressionConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$DoubleConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$DurationConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$FileConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$FloatConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$InetAddressConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$IntegerConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$LevelConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$LongConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$PathConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$PatternConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$SecurityProviderConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ShortConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$StringConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UriConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UrlConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UuidConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.validation.validators.RequiredValidator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.visitors.PluginAttributeVisitor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.visitors.PluginBuilderAttributeVisitor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.visitors.PluginConfigurationVisitor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.plugins.visitors.PluginElementVisitor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.properties.PropertiesConfigurationFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.xml.XmlConfigurationFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.config.yaml.YamlConfigurationFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.filter.AbstractFilterable$Builder",
    "allDeclaredFields": true
  },
  {
    "name": "org.apache.logging.log4j.core.filter.BurstFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.CompositeFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.DenyAllFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.DynamicThresholdFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.LevelMatchFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.LevelRangeFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.MapFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.MarkerFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.NoMarkerFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.RegexFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.ScriptFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.StringMatchFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.StructuredDataFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.ThreadContextMapFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.ThresholdFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.filter.TimeFilter"
  },
  {
    "name": "org.apache.logging.log4j.core.impl.Log4jContextFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.AppenderAdmin",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.AppenderAdminMBean",
    "allPublicMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.AsyncAppenderAdmin",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.AsyncAppenderAdminMBean",
    "allPublicMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.ContextSelectorAdmin",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.ContextSelectorAdminMBean",
    "allPublicMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.LoggerConfigAdmin",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.LoggerConfigAdminMBean",
    "allPublicMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.LoggerContextAdmin",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.LoggerContextAdminMBean",
    "allPublicMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.StatusLoggerAdmin",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.logging.log4j.core.jmx.StatusLoggerAdminMBean",
    "allPublicMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.layout.CsvLogEventLayout"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.CsvParameterLayout"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.GelfLayout"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.HtmlLayout"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.JsonLayout"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.LevelPatternSelector"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.LoggerFields"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.MarkerPatternSelector"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.MessageLayout"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.PatternLayout",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.layout.PatternLayout$Builder",
    "allDeclaredFields": true
  },
  {
    "name": "org.apache.logging.log4j.core.layout.PatternMatch"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.Rfc5424Layout"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.ScriptPatternSelector"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.SerializedLayout"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.SyslogLayout"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.XmlLayout"
  },
  {
    "name": "org.apache.logging.log4j.core.layout.YamlLayout"
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.ContextMapLookup",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.DateLookup",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.EnvironmentLookup",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.EventLookup",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.JavaLookup",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.JmxRuntimeInputArgumentsLookup",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.JndiLookup",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.Log4jLookup",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.LowerLookup",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.MainMapLookup",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.MapLookup",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.MarkerLookup",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.ResourceBundleLookup",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.StructuredDataLookup",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.SystemPropertiesLookup",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.lookup.UpperLookup",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.core.net.MulticastDnsAdvertiser"
  },
  {
    "name": "org.apache.logging.log4j.core.net.SocketAddress"
  },
  {
    "name": "org.apache.logging.log4j.core.net.SocketOptions"
  },
  {
    "name": "org.apache.logging.log4j.core.net.SocketPerformancePreferences"
  },
  {
    "name": "org.apache.logging.log4j.core.net.ssl.KeyStoreConfiguration"
  },
  {
    "name": "org.apache.logging.log4j.core.net.ssl.SslConfiguration"
  },
  {
    "name": "org.apache.logging.log4j.core.net.ssl.TrustStoreConfiguration"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Black"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Blue"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Cyan"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Green"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Magenta"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Red"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$White"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Yellow"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.ClassNamePatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.DatePatternConverter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.EncodingPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.EndOfBatchPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.EqualsIgnoreCaseReplacementConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.EqualsReplacementConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.FileDatePatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.FileLocationPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.FullLocationPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.HighlightConverter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.IntegerPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.LevelPatternConverter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.LineLocationPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.LineSeparatorPatternConverter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.LoggerFqcnPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.LoggerPatternConverter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.MapPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.MarkerPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.MarkerSimpleNamePatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.MaxLengthConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.MdcPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.MessagePatternConverter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.MethodLocationPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.NanoTimePatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.NdcPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.ProcessIdPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.RegexReplacement"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.RegexReplacementConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.RelativeTimePatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.RootThrowablePatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.SequenceNumberPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.StyleConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.ThreadIdPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.ThreadNamePatternConverter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.ThreadPriorityPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.ThrowablePatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.UuidPatternConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.pattern.VariablesNotEmptyReplacementConverter"
  },
  {
    "name": "org.apache.logging.log4j.core.script.Script"
  },
  {
    "name": "org.apache.logging.log4j.core.script.ScriptFile"
  },
  {
    "name": "org.apache.logging.log4j.core.script.ScriptRef"
  },
  {
    "name": "org.apache.logging.log4j.core.util.ExecutorServices"
  },
  {
    "name": "org.apache.logging.log4j.core.util.KeyValuePair"
  },
  {
    "name": "org.apache.logging.log4j.message.DefaultFlowMessageFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.message.ReusableMessageFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.util.internal.DefaultObjectInputFilter",
    "allPublicMethods": true
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.COMPOSITE$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.DH$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.DSA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.DSTU4145$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.EC$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.ECGOST$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.EdEC$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.ElGamal$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.GM$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.GOST$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.IES$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.X509$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Blake2b$Blake2b256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Blake2b$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Blake2s$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.DSTU7564$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.GOST3411$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Haraka$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Keccak$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.MD2$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.MD4$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.MD5$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD128$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD160$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD256$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD320$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA1$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA224$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA256$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA3$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA384$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA512$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SM3$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Skein$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Tiger$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Whirlpool$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.drbg.DRBG$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.keystore.BC$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.keystore.BCFKS$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.keystore.PKCS12$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.AES$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.ARC4$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.ARIA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Blowfish$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.CAST5$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.CAST6$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Camellia$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.ChaCha$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.DES$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.DESede$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.DSTU7624$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.GOST3412_2015$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Grain128$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Grainv1$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.HC128$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.HC256$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.IDEA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Noekeon$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.OpenSSLPBKDF$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF1$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Poly1305$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.RC2$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.RC5$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.RC6$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Rijndael$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SCRYPT$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SEED$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SM4$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Salsa20$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Serpent$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Shacal2$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SipHash$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SipHash128$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.TEA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.TLSKDF$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Threefish$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Twofish$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.VMPC$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.XTEA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Zuc$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.ethereum.vm.DataWord",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.ethereum.vm.LogInfo",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.semux.core.Amount",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.semux.core.Block",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.semux.core.BlockHeader",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.semux.core.Genesis",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.semux.core.Genesis$Premine",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.semux.core.Transaction",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.semux.core.TransactionResult",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.semux.core.TransactionResult$Code",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.semux.core.TransactionType",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.semux.crypto.Key$Signature",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.semux.net.SemuxChannelInitializer"
  },
  {
    "name": "org.semux.net.SemuxFrameHandler"
  },
  {
    "name": "org.semux.net.SemuxMessageHandler"
  },
  {
    "name": "org.semux.net.SemuxP2pHandler",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "org.semux.net.filter.FilterRule",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.semux.net.filter.SemuxIpFilter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.semux.util.ByteArray$ByteArrayKeyDeserializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.semux.vm.client.SemuxInternalTransaction",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "short[]"
  },
  {
    "name": "sun.management.ClassLoadingImpl",
    "allPublicConstructors": true
  },
  {
    "name": "sun.management.CompilationImpl",
    "allPublicConstructors": true
  },
  {
    "name": "sun.management.ManagementFactoryHelper$1",
    "allPublicConstructors": true
  },
  {
    "name": "sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
    "allPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryImpl",
    "allPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryManagerImpl",
    "allPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryPoolImpl",
    "allPublicConstructors": true
  },
  {
    "name": "sun.management.RuntimeImpl",
    "allPublicConstructors": true
  },
  {
    "name": "sun.misc.Unsafe",
    "fields": [
      {
        "name": "theUnsafe"
      }
    ],
    "methods": [
      {
        "name": "copyMemory",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object",
          "long",
          "long"
        ]
      },
      {
        "name": "getAndAddLong",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "long"
        ]
      },
      {
        "name": "getAndSetObject",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object"
        ]
      },
      {
        "name": "invokeCleaner",
        "parameterTypes": [
          "java.nio.ByteBuffer"
        ]
      }
    ]
  },
  {
    "name": "sun.nio.ch.SelectorImpl",
    "fields": [
      {
        "name": "publicSelectedKeys",
        "allowUnsafeAccess": true
      },
      {
        "name": "selectedKeys",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "sun.security.pkcs.SignerInfo[]"
  },
  {
    "name": "sun.security.provider.DSA$SHA1withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.DSA$SHA256withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.DSAKeyFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.DSAParameters",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.MD5",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.NativePRNG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA5$SHA512",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.X509Factory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSAKeyFactory$Legacy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA256withRSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.util.ObjectIdentifier"
  },
  {
    "name": "sun.security.x509.AuthorityInfoAccessExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.AuthorityKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.BasicConstraintsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CRLDistributionPointsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CertificateExtensions"
  },
  {
    "name": "sun.security.x509.CertificatePoliciesExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.ExtendedKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.KeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.NetscapeCertTypeExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  }
]
